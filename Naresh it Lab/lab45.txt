Que 1 : Write a function to find the length of a given string (excluding the null character).
-------

-> create int main() function
-> create int getLength(char str[]) function. this function will return length of string
-> in main function read String and call the getLength fuction and print the output.

Sample input : Hello
Sample output: Length of the string: 5


Sample input : ThisIsALongString
Sample output: Length of the string: 17
ans:
#include <stdio.h>
int getlength(char s[]);
int main()
{
    char s[100];
    printf("Enter a string ");
    gets(s);
    int length = getlength(s);
    printf("Length of the string: %d", length);
}
int getlength(char s[])
{
    int i;
    for (i = 0; s[i] != '\0'; i++)
        ;
    return i;
}

===========================================================================================================================


Que 2 : Write a C program to check given String is palindrom or not using function.
-------

-> create int main() function.
-> create bool isPalindromString(char str[]) function. this function will check given string is palindrom or not and return (true if the string is a palindrome, false otherwise).
-> in main function read one string input and call isPalindromString function. and print the result.

Sample input : radar
Sample output : The string is a palindrome.

Sample input : hello
Sample output : The string is not a palindrome.
ans:
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <stdbool.h>
bool palidrome(char s[]);
int main()
{
    char s[100];
    printf("Enter a string ");
    gets(s);

    printf("%s is %s string", s, palidrome(s) ? "a palindrome" : "not a palindrome");
}
bool palidrome(char s[])
{
    int i, j;
    for (i = 0; s[i] != '\0'; i++)
        ;
    for (j = 0; j < i / 2; j++)
    {
        if (tolower(s[j]) != tolower(s[i - j - 1]))
        {

            return false;
        }
    }

    return true;
}
================================================================================================================
Que 3 : Write a C program to calculate the sum of all elements in an integer array using function.
------

-> create int main() function.
-> create int arraySum(char str[]) function. this function will take integer array as input in parameter and will return the total sum as result.
-> in main function read size of array , then based on size create new array and store the values.
-> call the arraySum function and print the sum which is return by arraySum function.


Sample input:
              Size of the array: 5
              Array elements: 10 20 30 40 50


Sample output: Sum of all elements in the array: 150
ans:
#include <stdio.h>
int arraySum(char[]);
int main()
{
  char arr[100];
  printf("Enter array element : ");
  scanf("%[^\n]s", &arr);
  printf("Sum : %d", arraySum(arr));
  return 0;
}

int arraySum(char arr[])
{
  int sum = 0;
  for (int i = 0; arr[i] != '\0'; i++)
  {
    if (arr[i] >= '0' && arr[i] <= '9')
    {
      int j = i, num = 0;
      while (arr[j] != ' ' && arr[j] != '\0')
      {
        if (arr[j] >= '0' && arr[j] <= '9')
        {
          num = num * 10 + (arr[j] - '0');
        }
        j++;
      }
      sum += num;
      i = j - 1;
    }
  }
  return sum;
}//Array sum for string(char array)


=========================================================================================================================

Que 4: Write a C program to check if two strings are anagrams of each other or not using function.
------

-> create int main() function.
-> create bool isAnagram(char str1[],char str2[]) function. this function will take two string as input and will return true if both String are anagram otherwise will return false.
-> in main function read two Strings and pass it to isAnagram fuction by calling it and print the result.


Sample input:
             First string : listen
             Second string: silent

Sample output: The strings are anagrams.


Sample input:
             First string : hello
             Second string: world

Sample output: The strings are not anagrams.
ans:
#include <stdio.h>
#include <stdbool.h>
bool anagram(char a[], char b[]);
int main()
{
    char a[100], b[100];
    printf("Enter 1st string ");
    gets(a);
    printf("Enter 2nd string ");
    gets(b);
    printf("The string are %s", anagram(a, b) ? "anagram" : "not anagram");
}
bool anagram(char a[], char b[])
{
    int i, j, t;
    for (i = 0; a[i] != '\0'; i++)
    {
        for (j = i + 1; a[j] != '\0'; j++)
        {
            if (a[i] > a[j])
            {
                t = a[i];
                a[i] = a[j];
                a[j] = t;
            }
            if (b[i] > b[j])
            {
                t = b[i];
                b[i] = b[j];
                b[j] = t;
            }
        }
    }

    for (i = 0; a[i] != '\0'; i++)
    {
        if (a[i] != b[i])
        {

            return false;
        }
    }

    return true;
}

=========================================================================================================================

Que 5 : Write a C program to check if a string contains only digits.
--------

-> create int main() function.
-> create bool isContainsDigits(char str[]) function. this function will take string as input and will return (true if String contains only digits otherwise return false).
-> in main function read String and pass it to isContainsDigits fuction by calling it and print the result.


Sample input  : 12345
Sample output : The string contains only digits.


Sample input : 45A7
Sample output : The string contains non-digit characters.
ans:
#include <stdio.h>
#include <stdbool.h>
bool digit(char s[]);
int main()
{
    char s[100];
    printf("Enter a string ");
    gets(s);
    printf("%s contain %s ", s, digit(s) ? "only digits" : "non-digit characters");
}
bool digit(char s[])
{
    int i, j;
    for (i = 0; s[i] != '\0'; i++)
    {
        if (s[i] >= '0' && s[i] <= '9')
            ;
        else
        {

            return false;
        }
    }
    return true;
}
