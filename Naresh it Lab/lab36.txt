1) remove all the Spaces from a given String.
Write a C program to remove all the Spaces from a given String.
Sample Input
Input as : 

Enter a String : Black cat on a mat
Sample Output
Expected output : Blackcatonamat
ans:
#include <stdio.h>
int main()
{
    char a[100], newStr[100];
    int i, idx = 0;
    printf("Enter a string ");
    scanf("%[^\n]", a);
    for (i = 0; a[i] != '\0'; i++)
    {
        if (a[i] == ' ');
        else
        {
            newStr[idx++] = a[i]; // newStr[0]= A
        }
    }
    newStr[idx] = '\0';
    printf("%s", newStr);

    return 0;
}
================================================================================================================

2)Given string contains a capital alphabet, small alphabet, special character and digit.
 Write a C program to check the given string contains a capital alphabet, small alphabet, special character and digit.
Sample Input
Input as : 

Enter a String : Nareshit@123


Input as : 

Enter a String : nareshit
Sample Output
Expected output :

The given String is matching to our cases.


Expected output :

The given String is not matching to our cases
ans:
#include <stdio.h>
int main()
{
    char s1[100], s2[100];
    int i, j, uc = 0, lc = 0, dig = 0, sc = 0;
    printf("enter the string\n");
    scanf("%s", s1);

    for (i = 0; s1[i] != '\0'; i++)
    {
        if (s1[i] >= 'a' && s1[i] <= 'z')
        {
            lc++;
        }
        else if (s1[i] >= 'A' && s1[i] <= 'Z')
        {
            uc++;
        }
        else if (s1[i] >= '0' && s1[i] <= '9')
        {
            dig++;
        }
        else
            sc++;
    }
    if (lc  && uc  && dig  && sc )
    {
        printf("Our string is matching our cases");
    }
    else
    {
        printf("our string is not matching our cases");
    }
}
================================================================================================================

3)Convert UpperCase
Write a C program to convert all the character to upper case 

from a given index to end index. If the given index is not available then print

Index is not available.
Sample Input
Input as :

Enter a String : I am a student

Enter the starting index number : 4

Enter the ending index number : 13
Sample Output
Expected output :

Resulting String is : I am A STUDENT
ans:
#include <stdio.h>
int main()
{
    char s[100];
    int i, in, posi;
    printf("Enter the string ");
    gets(s);
    printf("enter the index ");
    scanf(" %d", &in);
    printf("enter the position ");
    scanf("%d", &posi);
    for (i = in; i < posi - 1; i++)
        if (s[i] >= 'a' && s[i] <= 'z')
            s[i] -= 32;

    printf("%s", s);
}
===============================================================================================================

4)Concat two String
Write a C program to combine two string in a single String.
Sample Input
Input as :

Enter first String : Naresh

Enter Second String : it
Sample Output

Expected output :

Resulting String is : Nareshit
ans:
#include <stdio.h>
int main()
{
    char s1[100], s2[100], s3[100];
    int i, j;
    printf("Enter first string ");
    gets(s1);
    printf("Enter second string ");
    gets(s2);
    for (i = 0; s1[i] != '\0'; i++)
        s3[i] = s1[i];
    for (j = 0; s2[j] != '\0'; i++, j++)
        s3[i] = s2[j];
    s3[i] = '\0';
    printf("string is %s", s3);
    return 0;
}
================================================================================================================

5)remove given character from a String.
Write a C program to remove given character from a String.
Sample Input
Input as : 

Enter a String : Bookstore

Enter the character you want to remove : o
Sample Output
Expected Output : 

Resulting String is : Bkstre
ans:
#include <stdio.h>
#include <string.h>
int main()
{
    char s1[100], ele;
    int i, j, f;
    printf("enter the string  ");
    scanf("%s", s1);
    int len = strlen(s1);
    printf("enter the character you want to remove ");
    scanf(" %c", &ele);
    for (i = 0; i < len; i++)
    {
        if (s1[i] == ele)
        {
            for (j = i; j < len; j++)
            {
                s1[j] = s1[j + 1];
            }
            i--;
            len--;
        }
    }

    printf("%s", s1);
}