1)sum of the numbers
Write a C program to find out the sum of the numbers which is present in a given string.
Sample Input
Input as : 

Enter a String : TS12ab345
Sample Output
Output as : 
Sum Of the numbers is : 15
ans: 
#include <stdio.h>
int main()
{
    char s[100];
    int i, sum;
    printf("Enter a string ");
    scanf("%s", s);
    for (i = 0; s[i] != '\0'; i++)
    {
        if (s[i] >= '0' && s[i] <= '9')
            sum += s[i] - '0';
    }
    printf("sum=%d", sum);
    return 0;
}
================================================================================================================

2)compresses a string
Create a program that compresses a string by replacing repeated characters with a count of the repetition (e.g., "aaabbbcc" becomes "a3b3c2").
Sample Input
Input as : 

Enter a String : aaabbccdae
Sample Output
Output as : 

Resulting string is : a4b2c2
ans:
#include <stdio.h>
int main()
{
    char s[100];
    printf("Enter a string ");
    gets(s);
    for (int i = 0; s[i] != '\0'; i++)
    {
        int count = 1;
        for (int j = i + 1; s[j] != '\0'; j++)
        {
            if (s[i] == s[j])
            {
                s[j] = ' ';
                count++;
            }
        }

        if (count != 1 && s[i] != ' ')
        {
            printf("%c%d", s[i], count);
        }
    }
    return 0;
}
================================================================================================================

3)convert each word first alphabet to Upper case.
Write a C program to convert each word first alphabet to Upper case.
Sample Input
Input as : 

Enter a String : i am a student of nareshit
Sample Output
Output as : 

Sum Of the numbers is : I Am A Student Of Nareshit
ans:
#include <stdio.h>
int main()
{
    char name[30];
    int i;
    printf("Enter a string ");
    gets(name);
    if (name[0] >= 'a' && name[0] <= 'z')
    {
        name[0] = name[0] - 32;
    }

    for (i = 1; name[i] != '\0'; i++)
    {
        if (name[i] == ' ')
        {
            if (name[i + 1] >= 'a' && name[i + 1] <= 'z')
            {
                name[i + 1] = name[i + 1] - 32;
                i++;
            }
        }
        else if (name[i] >= 'A' && name[i] <= 'Z')
        {
            name[i] = name[i] + 32;
        }
    }

    printf("%s", name);
    return 0;
}
================================================================================================================

4)count all palindromic substrings
Write a program to find and count all palindromic substrings in a given string.
Sample Input
Input as : 

Enter a String : madam
Sample Output
Output as : 

Palindromic substring : madam

Palindromic substring : ada

Total palindromic substrings are : 2
ans:
#include <stdio.h>
int main()
{
    char str[100];
    int len = 0;
    printf("Enter string : ");
    scanf("%[^\n]s", str);
    for (; str[len] != '\0'; len++)
        ;

    int first = 0, last = len - 1, flag = 1;
    while (first < last)
    {
        if (str[first] != str[last])
        {
            flag = 0;
            break;
        }
        first++;
        last--;
    }

    if (flag)
    {
        first = 0, last = len - 1;
        while (first < last)
        {
            printf("Palindromic substring : ");
            for (int j = first; j <= last; j++)
            {
                printf("%c", str[j]);
            }
            printf("\n");
            first++;
            last--;
        }

        printf("Total palindromic substrings are : %d", len / 2);
    }
    else
    {
        printf("%s isn't a palidromic string!!!", str);
    }

    return 0;
}
=================================================================================================================
5)Palindrome String
Check the given String is palindrome or not.
Sample Input
Input as : 

Enter a String :  radar

Input as : 

Enter a String : alfha

Sample Output
Output as : 
radar is a palindrome string.
Output as : 

radar is a not palindrome string.
ans:
#include <stdio.h>
#include <conio.h>
#include <ctype.h>
int main()
{
    char s[100];
    int i, j;
    printf("Enter the strings ");
    gets(s);
    for (i = 0; s[i] != '\0'; i++)
        ;
    for (j = 0; j < i / 2; j++)
    {
        if (tolower(s[j]) != tolower(s[i - j - 1]))
        {
            puts("Not a palidrome");
            getch();
            return 0;
        }
    }
    puts("Palidrome");
    getch();

    return 0;
}