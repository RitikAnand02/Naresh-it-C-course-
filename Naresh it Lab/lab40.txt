
Que 6 : Write a program in C to count the number of vowels and consonants in a string using a pointer.
-------

Sample input : string

Sample output : 

Number of vowels : 1                                             
Number of constant : 5
ans:
#include <stdio.h>
int main()
{
    char s1[100], *p;
    int i, v = 0, c = 0;
    printf("Enter a value ");
    scanf("%s", s1);
    p = s1;
    for (i = 0; s1[i] != '\0'; i++)
    {
        if (s1[i] == 'a' || s1[i] == 'e' || s1[i] == 'i' || s1[i] == 'o' || s1[i] == 'u' || s1[i] == 'A' || s1[i] == 'E' || s1[i] == 'I' || s1[i] == 'O' || s1[i] == 'U')
        {
            v++;
        }
        else
        {
            c++;
        }
    }
    printf("Number of vowels=%d\n Number of constant=%d", v, c);

    return 0;

=================================================================================================================

Que 7 : Write a c program to find the median of a merged sorted Array by using pointer and function.
-------

-> create int main() function.
-> create void mergeAndSort(int *arr1, int size1, int *arr2, int size2, int *mergedArray) function.
-> double findMedian(int *mergedArray, int totalSize) function.

Sample input : 
Enter the size of 1st array : 2
Enter two element :1 3

Enter the size of 2nd array : 1
Enter one element :2

Sample output : 

After sorting Array is :1 2 3
Median is : 2


Sample input :  
Enter the size of 1st array : 2
Enter two element :1 4

Enter the size of 2nd array : 2
Enter two element :2 3

Sample output : 

After sorting Array is :1 2 3 4
Median is : 2.5
ans:
#include <stdio.h>
void main()
{
    int a[100], b[100], i, s1, s2, j;
    int *p = a;

    printf("Enter 1st array size 1 - 100 ");
    scanf("%d", &s1);
    printf("Enter %d integers for a array ", s1);
    for (i = 0; i < s1; i++)
        scanf("%d", &a[i]);
    printf("Enter 2nd array size 1 - 100 ");
    scanf("%d", &s2);

    printf("Enter %d integers for a array ", s2);
    for (i = 0; i < s2; i++)
        scanf("%d", &b[i]);
    for (i = s1, j = 0; j < s2; i++, j++)
        a[i] = b[j];
    for (i = 0; i < s1 + s2; i++)
    {
        for (j = i + 1; j < s1 + s2; j++)
        {
            if (p[i] > p[j])
            {
                int t = p[i];
                p[i] = p[j];
                p[j] = t;
            }
        }
    }
    printf("Elements are ");
    for (i = 0; i < s1 + s2; i++)
        printf("%4d", a[i]);
    int len = s1 + s2, m;
    float sum = 0;
    for (i = 0; i < len; i++)
        sum += p[i];
    float result = sum / len;
    printf("\n median=%.2f", result);
}

=================================================================================================================

Que 8 : Write a C program to rotate an array of integers to the right by a specified number of positions. 
------  For example, if you have an array [1, 2, 3, 4, 5] and you want to rotate it to the right by 2 positions, 
        the result should be [4, 5, 1, 2, 3].(Develop it by using pointers & function).

-> create int main() function.
-> create void rotateRight(int *arr, int size, int positions) function.
-> in main function print the output of array before and after rotation.

Sample input : 
Enter the size of the array: 5
Enter 5 elements: 1 2 3 4 5
Enter the number of positions to rotate to the right: 2

Sample output : 
Before rotation : 1, 2, 3, 4, 5
After rotation : 4, 5, 1, 2, 3

=================================================================================================================

Que 9 : Given a sorted array of distinct integers and a target value, return the index if the target is found. If not,return the index where it would be if it were inserted in order.(Using Pointer)
-------

-> create int main() function.
-> create int searchInsert(int *nums, int size, int target) //Function to find and return the index of the target or the insertion point.

Example 1 :
Sample input :
nums = [1,3,5,6]
target = 5
Sample output : 2

Example 2 :
Input: nums = [1,3,5,6]
target = 2
Sample output: 1

Example 3:
Sample input :
nums = [1,3,5,6]
target = 7
Sample output: 4
