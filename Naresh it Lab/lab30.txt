

Write a program in C to print all unique elements in an array. 

Test Data :

Print all unique elements of an array:

------------------------------------------

Input the number of elements to be stored in the array: 4

Input 4 elements in the array :

element - 0 : 3

element - 1 : 2

element - 2 : 2

element - 3 : 5

Expected Output :

The unique elements found in the array are:

3 5
ans:
#include <stdio.h>
int main()
{
  int size;
  printf("Enter the size of array : ");
  scanf("%d", &size);
  int arr[size];
  for (int i = 0; i < size; i++)
  {
    printf("Element - %d : ", i);
    scanf("%d", &arr[i]);
  }

  for (int i = 0; i < size; i++)
  {
    int count = 0;
    for (int j = 0; j < size; j++)
    {
      if (arr[i] == arr[j])
      {
        count++;
      }
    }
    if (count == 1)
    {
      printf("%d ", arr[i]);
    }
  }

  return 0;
}



=====================================================================================================================
Write a program in C to count the frequency of each element of an array.

Test Data :

Input the number of elements to be stored in the array :6

Input 6 elements in the array :

element - 0 : 25

element - 1 : 12

element - 2 : 43

element - 3 : 43

element - 4 : 25

element - 5 : 15

Expected Output :

The frequency of all elements of an array :

25 occurs 2 times

12 occurs 1 times

43 occurs 2 times

15 occurs 1 times
ans:
#include <stdio.h>
void main()
{
    int a[100], b[100], i, n, c, j;

    printf("Enter array size 1 - 100 ");
    scanf("%d", &n);

    printf("Enter %d integers for a array ", n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for (i = 0; i < n; i++)
    {
        if (b[i] != -1)
        {
            for (c = 1, j = i + 1; j < n; j++)
            {
                if (a[i] == a[j])
                {
                    c++;
                    b[j] = -1;
                }
            }
            b[i] = c;
        }
    }
    for (i = 0; i < n; i++)
    {
        if (b[i] != -1)
            printf("%d occur %d times\n", a[i], b[i]);
    }
}
=====================================================================================================================


Write a program in C to insert New value in the array (sorted array ) at its proper respective position as its accending order.

 

Test Data : 

Input the size of array : 5 


Input 5 elements in the array : 

element - 0 : 1 

element - 1 : 3 

element - 2 : 7

element - 3 : 8

element - 4 : 10

Input the value to be inserted : 6


Expected Output : 

The current list of the array : 

1 3 7 8 10


After Insert the element the new list is : 

1 3 6 7 8 10
ans:
#include <stdio.h>
void main()
{
    int a[100], b[100], i, s1, s2, j;

    printf("Enter 1st ,2nd array size 1 - 100 ");
    scanf("%d%d", &s1, &s2);

    printf("Enter %d integers for a array ", s1);
    for (i = 0; i < s1; i++)
        scanf("%d", &a[i]);
    printf("Enter %d integers for a array ", s2);
    for (i = 0; i < s2; i++)
        scanf("%d", &b[i]);
    for (i = s1, j = 0; j < s2; i++, j++)
        a[i] = b[j];
    for (i = 0; i < s1 + s2; i++)
    {
        for (j = i + 1; j < s1 + s2; j++)
        {
            if (a[i] > a[j])
            {
                int t = a[i];
                a[i] = a[j];
                a[j] = t;
            }
        }
    }
    printf("Elements are ");
    for (i = 0; i < s1 + s2; i++)
        printf("%4d", a[i]);
}


=====================================================================================================================


Write a program in C to delete an element at desired position from an array. 


Test Data : 

Input the size of array : 5 

Input 5 elements in the array in ascending order: 

element - 0 : 1 

element - 1 : 2 

element - 2 : 3 

element - 3 : 4 

element - 4 : 5 


Input the position which to delete: 3 

Expected Output : 

The new list is : 1 2 4 5 
ans:
#include <stdio.h>
void main()
{
    int a[100], i, n, ele, f = 0, j;

    printf("Enter array size 1 - 100 ");
    scanf("%d", &n);

    printf("Enter %d integers ", n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);

    printf("Enter element to delete ");
    scanf("%d", &ele);

    for (i = 0; i < n; i++)
    {
        if (a[i] == ele)
        {
            for (n--, f = 1, j = i; j < n; j++)
                a[j] = a[j + 1];
            i--;
        }
    }
    if (f == 0)
        printf("\n%d not found", ele);

    else
    {
        printf("Elements are ");
        for (i = 0; i < n; i++)
            printf("%4d", a[i]);
    }
}


=====================================================================================================================


Write a C program to remove all occurrences of a specific element from a given array of integers. The program should display the resulting array after removing the element.


Test Data :

Input the size of array : 10

Input 10 elements in the array : 

3 2 5 6 2 7 9 2 2 1


Input the element that you want to delete: 2


Expected Output : 

The new list is : 3 5 6 7 9 1
ans:
#include <stdio.h>
int main()
{
    int a[100], i, n, ele, f = 0;

    printf("Enter array size 1 - 100 ");
    scanf("%d", &n);

    printf("Enter %d integers ", n);
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);

    printf("Enter elements to delete ");
    scanf("%d", &ele);
    printf("Elements are ");
    for (i = 0; i < n; i++)
        if (a[i] != ele)
            printf("%4d", a[i]);
        else
            f = 1;
    if (f == 0)
        printf("\n%d not found ", ele);
}


=====================================================================================================================